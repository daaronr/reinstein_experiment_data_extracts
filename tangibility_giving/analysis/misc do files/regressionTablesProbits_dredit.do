clearuse housemoney.dtareplace  cashperf=cash*performancedrop maleencode Geschlecht, gen(male)replace female=male-1label var female "Female"replace perfXfem=performance*femalelabel var perfXfem "Female $\times$ perform."label var cash "Pay cash"label var performance "Pay by performance"label var cashperf "Cash $\times$ performance"label var shock "Third charity"replace Donation=DonationBROT+DonationWWF+DonationDRKreplace stake5=0replace stake5=1 if CakeSize==5label var stake5 "Stake: 5"replace stake75=0replace stake75=1 if CakeSize==7.5label var stake75 "Stake: 7.5"replace stake10=0replace stake10=1 if CakeSize==10label var stake10 "Stake: 10"gen biDon = 0replace biDon = 1 if Donation > 0probit biDon cash performance cashperfmfxeststo Probit_1probit biDon cash performance cashperf shock stake75 stake10mfxeststo Probit_2probit biDon cash performance cashperf shock stake75 stake10 female mfxeststo Probit_3esttab Probit_1 Probit_2 Probit_3 using "ProbitTreat.tex",  tex replace b(a2)  nogaps  label pr2 nodepvars legend coeflabels(_cons "Constant")  star(+ 0.10 * 0.05 ** 0.01) se mtitles("Probit" "Probit" "Probit")  margin r2 parenthesesprobit biDon cash performanceeststo Probit_1aprobit biDon cash performance shock stake75 stake10 femaleeststo Probit_2aprobit biDon cash performance cashperf shock stake75 stake10 female eststo Probit_3aesttab Probit_1a Probit_2a Probit_3a using "ProbitTreata.tex",  tex replace b(a2)  nogaps  label pr2 nodepvars legend coeflabels(_cons "Constant")  star(+ 0.10 * 0.05 ** 0.01) se mtitles("Probit" "Probit")   r2 parentheses